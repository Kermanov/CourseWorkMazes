Алгоритми створення ідеальних лабіринтів

Алгортим пошуку в глибину з вертанням (recursive backtracker):
1. Вибрати будь-яку клітинку як початкову
2. Зробити початкову клітинку поточною і відмітити як відвідану
3. Поки є невідвідані клітинки:
	1. Якщо поточна клітинка має невідвіданих сусідей:
		1. Занести поточну клітинку в стек
		2. Обрати випадкову клітинку із сусідніх
		3. Прибрати стінку між поточною клітинкою і обраною
		4. Зробити обрану клітинку поточною і відмітити як відвідану
	2. Інакше, якщо стек не пустий:
		1. Витягти клітинку зі стеку
		2. Зробити її поточною
	3. Інакше (при нормальній роботі алгоритму ніколи не виконається):
		1. Обрати випадкову невідвідану клітинку, зробити її поточною і відмітити як відвідану
		
		
Модифікований алгоритм Прима (prima modified):
1. Кожній клітинці надається стан, який може приймати одне з трьох значеннь (внутрішня, гранична, зовнішня)
2. Всі клітинки спочатку мають стан "зовнішня"
3. Обрати будь-яку клітинку
4. Змінити стан обраної клітинки на "внутрішня"
5. Змінити стан всіх сусідніх клітинок на "граничний"
6. Поки всі клітинки не стали внутрішніми:
	1. Обрати випадкову граничну клітинку
	2. Обрати випадкову сусідню з нею внутрішню клітинку
	3. Прибрати стінку між цими клітинками
	4. Змінити стан обраної граничної клітинки на "внутрішня"
	5. Змінити стан всіх сусідніх "зовнішніх" клітинок на "граничний"
	

Алгоритм Олдоса-Бродера (aldous-broder):
1. Вибрати випадкову клітинку
2. Поки є невідвідані клітинки:
	1. Переміститись у випадкову сусідню клітинку
	2. Якщо клітинка ще не відвідана, то прибрати стінку між цією та попередньою клітинкою
	